@using FileSharing.Common.Extensions
@using System.Globalization

@page "/download"
@implements IDisposable

@if (_showNextDownloadTime && _lastDownloadTime is not null && _secondsLeftToDownload > 0)
{
    <p class="time-for-next-download">
        @string.Format("{0:00}", TimeSpan.FromSeconds(_secondsLeftToDownload).Minutes)
        :
        @string.Format("{0:00}", TimeSpan.FromSeconds(_secondsLeftToDownload).Seconds)
    </p>
}

<div class="row">
    <div class="col">
        <h3>Download a file</h3>

        <input class="form-control" @oninput="(e => UrlOnInput(e))" />

        <button class="btn btn-primary mt-1" @onclick="GetInfo" disabled="@string.IsNullOrWhiteSpace(_url)">Get Info</button>
    </div>
    <div class="col">

        @if (_document is not null)
        {
            <h3 class="mb-3">@_document.Filename (@(_document.IsBlocked ? "Blocked" : "Not Blocked"))</h3>
            <p>Uploaded At: @_document.UploadedAt.ToString("dd/MM/yyyy HH:mm")</p>
            <p>Size: @FileSizeMB()</p>

            @if (_document.IsBlocked)
            {
                <div class="modal" tabindex="-1" id="modalUnBlockRequest">
                    <div class="modal-dialog">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title">Send request for unblocking</h5>
                                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                            </div>
                            <div class="modal-body">
                                <EditForm Model="_unblockFileDto" OnValidSubmit="SendUnblockRequest" id="frmUnblock">
                                    <DataAnnotationsValidator />

                                    <div class="form-group">
                                        <label>Reason</label>
                                        <InputTextArea @bind-Value="_unblockFileDto.Reason" class="form-control" />
                                        <ValidationMessage For="(() => _unblockFileDto.Reason)" />
                                    </div>

                                </EditForm>
                            </div>
                            <div class="modal-footer">
                                <button type="submit" form="frmUnblock" class="btn btn-primary">Send Request</button>
                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                            </div>
                        </div>
                    </div>
                </div>

                <button class="btn btn-success" @onclick="RequestUnblockClicked">Request Unblock</button>
            }
            else
            {
                <div class="modal" tabindex="-1" id="modalBlockRequest">
                    <div class="modal-dialog">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title">Send request for blocking</h5>
                                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                            </div>
                            <div class="modal-body">
                                <EditForm Model="_blockFileDto" OnValidSubmit="SendBlockRequest" id="frmBlock">
                                    <DataAnnotationsValidator />

                                    <div class="form-group">
                                        <label>Reason</label>
                                        <InputTextArea @bind-Value="_blockFileDto.Reason" class="form-control" />
                                        <ValidationMessage For="(() => _blockFileDto.Reason)" />
                                    </div>

                                </EditForm>
                            </div>
                            <div class="modal-footer">
                                <button type="submit" form="frmBlock" class="btn btn-primary">Send Request</button>
                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                            </div>
                        </div>
                    </div>
                </div>

                <button class="btn btn-danger" @onclick="RequestBlockClicked">Request Block</button>
            }

            @if (!_document.IsBlocked)
            {
                <button class="btn btn-primary ms-1" @onclick="Download" disabled="@(_document.IsBlocked || _loading)">Download</button>
                <p>@_textForDownload</p>
            }
        }
    </div>
</div>